import {
  ChakraProvider,
  // Alert,
  // AlertIcon,
  // AlertTitle,
  // AlertDescription,
} from '@chakra-ui/react';
import Head from 'next/head';
// import { ErrorBoundary } from 'react-error-boundary';
import theme from '../../utils/theme';
import Header from '../Header';
import { Web3ReactProvider } from '@web3-react/core';
import { ethers } from 'ethers';

interface LayoutProps {
  children: React.ReactNode;
}

const getLibrary = (
  provider:
    | ethers.providers.ExternalProvider
    | ethers.providers.JsonRpcFetchFunc
) => {
  const library = new ethers.providers.Web3Provider(provider);
  library.pollingInterval = 8000;
  return library;
};

// const ErrorState = () => {
//   console.log('ErrorState called');
//   return (
//     <Alert status="error">
//       <AlertIcon />
//       <AlertTitle mr={2}>An error occured!</AlertTitle>
//       <AlertDescription>Please contact us for assistance.</AlertDescription>
//     </Alert>
//   );
// };

export default function Layout({ children }: LayoutProps) {
  return (
    <>
      <ChakraProvider theme={theme}>
        {/* <ErrorBoundary FallbackComponent={ErrorState}> */}
        <Web3ReactProvider getLibrary={getLibrary}>
          <Head>
            <title>Recommender</title>
            <meta name="description" content="Generated by create next app" />
          </Head>
          <Header />
          <main>{children}</main>
          <div> Footer </div>
        </Web3ReactProvider>
        {/* </ErrorBoundary> */}
      </ChakraProvider>
    </>
  );
}
